<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kuang.mapper.RecordMapper">

    <resultMap id="RecordMap" type="Record">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="songId" column="song_id"/>
        <result property="fav" column="fav"/>
    </resultMap>
    <resultMap id="historyMap" type="com.kuang.dto.history.History">
        <result property="name" column="name"/>
        <result property="album" column="album"/>
        <result property="artist" column="artist"/>
        <result property="duration" column="duration"/>
        <result property="rid" column="rid"/>
        <result property="id" column="id"/>
        <result property="fav" column="fav"/>
    </resultMap>
    <resultMap id="count" type="java.lang.Integer">
        <result column="total"/>
    </resultMap>

    <insert id="addRecord" parameterType="Record">
        insert into record (user_id, song_id, fav)
        values (#{userId}, #{songId}, #{fav})
    </insert>

    <delete id="deleteRecordById">
        delete
        from record
        where id = #{id}
    </delete>

    <update id="updateRecordById">
        update record
        set fav = #{fav}
        where id = #{id}
    </update>

    <select id="queryRecordById" resultMap="RecordMap">
        select *
        from record
        where id = #{id}
    </select>
    <select id="queryRecordByUserId" resultMap="RecordMap">
        select *
        from record
        where user_id = #{userId}
    </select>
    <select id="queryRecordByUserIdAndSongId" resultMap="RecordMap">
        select *
        from record
        where user_id = #{userId}
          AND song_id = #{songId}
    </select>
    <select id="queryRecordByUserIdWithPage" resultMap="historyMap">
        SELECT s.name     AS `name`,
               s.album    AS `ablum`,
               s.artist   AS `artist`,
               s.duration AS `duration`,
               s.rid      AS `rid`,
               r.id       AS `id`,
               r.fav      AS `fav`
        FROM record AS r,
             song AS s
        WHERE r.user_id = #{userId}
          AND r.song_id = s.id
        limit #{pageStart},#{pageSize};
    </select>
    <select id="queryCountByUserId" resultType="java.lang.Integer">
        SELECT count(1)
        FROM record AS r,
             song AS s
        WHERE r.user_id = #{userId}
          AND r.song_id = s.id;
    </select>


</mapper>